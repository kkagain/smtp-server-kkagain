version: '3.8'

services:
  # Main SMTP MCP Server
  smtp-mcp-server:
    build: .
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=production
      - PORT=3008
      - LOG_LEVEL=info
      - DATABASE_TYPE=sqlite
      - SQLITE_DB_PATH=./data/smtp-server.db
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_SECURE=false
      # Note: Add your SMTP credentials via .env file or docker-compose.override.yml
      # - SMTP_USER=your-email@gmail.com
      # - SMTP_PASS=your-app-password
      - JWT_SECRET=your-super-secret-jwt-key-change-this
      - ENABLE_TEMPLATES=true
      - ENABLE_RATE_LIMITING=true
      - ENABLE_BULK_EMAIL=true
      - ENABLE_SWAGGER=true
    volumes:
      # Mount config directory for persistent SMTP configurations
      - ./config:/app/config
      # Mount logs directory for persistent logs
      - ./logs:/app/logs
      # Mount data directory for SQLite database
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3008/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - smtp-network

  # Optional PostgreSQL Database (uncomment and configure for production)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: smtp_server
      POSTGRES_USER: smtp_user
      POSTGRES_PASSWORD: change_this_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smtp_user -d smtp_server"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - smtp-network
    profiles:
      - postgres

  # Optional Redis for Caching and Queues
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - smtp-network
    profiles:
      - redis

  # Optional Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - smtp-mcp-server
    restart: unless-stopped
    networks:
      - smtp-network
    profiles:
      - nginx

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smtp-network:
    driver: bridge
    name: smtp-mcp-network
